{
  "projects": [
    {
      "title": "Youtube Sequencer",
      "tags": [
        "React",
        "TypeScript",
        "GraphQL",
        "PostgreSQL",
        "AWS",
        "Terraform",
        "Redux",
        "Firebase Authentication"
      ],
      "dateText": "December 2024",
      "type": "Personal Project",
      "description": [
        "Developed a full-stack web application for repurposing Youtube as a drum machine and for sharing created patterns.",
        "Implemented a GraphQL API with Apollo Server on EC2, leveraging GraphQL's type-safe declarative query interface to simplify client-server interactions.",
        "Utilized Redux and Redux Persist for state management, incorporating versioning to handle future changes to store structure by resetting persisted state upon version mismatches.",
        "Implemented secure file upload and download functionality by generating AWS S3 pre-signed URLs, enabling clients to upload and download from S3 without exposing server credentials.",
        "Optimized PostgreSQL database performance by storing likes_count directly in the Patterns table and using a trigger to update count on like/unlike events, eliminating an expensive aggregate query when retrieving a Pattern's like count.",
        "Automated AWS infrastructure deployment using Terraform, implementing a secure multi-tier architecture with private subnets for RDS, IAM roles following the principle of least privilege, and configured security groups for network isolation."
      ],
      "images": [
        "yts_6_edit.png"
      ],
      "link": "https://youtubesequencer.com/"
    },
    {
      "title": "Gridworld Streaming",
      "tags": [
        "React",
        "MongoDB",
        "Firebase",
        "Stripe",
        "JWT",
        "Vercel"
      ],
      "dateText": "October 2024",
      "type": "Personal Project",
      "description": [
        "Developed a music streaming application using React, MongoDB, and Firebase for object storage.",
        "Implemented user authentication and account management.",
        "Created a responsive audio player with custom controls using Howler.js.",
        "Designed and implemented a token-based access system for premium content.",
        "Utilized Stripe API for secure payment processing and access token purchases.",
        "Deployed the application using Vercel, using serverless functions for a custom API."
      ],
      "images": [
        "gridworld_font_1_edit.png"
      ],
      "link": "https://www.gridworldstreaming.com/"
    },
    {
      "title": "For Edmonia: Together Sculpting",
      "tags": [
        "React"
      ],
      "dateText": "July 2024",
      "type": "Commissioned Project",
      "description": [
        "Developed a highly interactive React website allowing users to explore sculptor Edmonia Lewis's archive while creating their own collage. Created in collaboration with artist Yétúndé Olágbajú.",
        "Implemented complex DOM manipulation features (drag, rotate, scale) using interact.js."
      ],
      "images": [
        "for_edmonia_header.png"
      ],
      "link": "https://foredmonia.com/"
    },
    {
      "title": "Collaborative Collage",
      "tags": [
        "JavaScript",
        "Node.js",
        "SQLite",
        "WebSockets"
      ],
      "dateText": "August 2023",
      "type": "Personal Project",
      "description": [
        "Developed an interactive, multi-user collage creation platform - vanilla JS front, Node.js back, SQLite database.",
        "Implemented dynamic image manipulation: add/delete, layer ordering, move, and resize.",
        "Utilized WebSockets for real-time collaboration, enabling simultaneous editing by multiple users.",
        "Self-hosted the application on a Raspberry Pi running Apache2."
      ],
      "images": []
    },
    {
      "title": "Geochat",
      "tags": [
        "Java",
        "Android",
        "Firebase Realtime Database",
        "MVC"
      ],
      "dateText": "October 2022",
      "type": "Academic Project",
      "description": [
        "Led development of a location-based message board Android application.",
        "Designed wireframes in Miro and conducted extensive planning before beginning to code.",
        "Integrated Google Maps API and Firebase Realtime Database.",
        "Adhered to Model-View-Controller principles, designing with modularity in mind."
      ],
      "images": []
    }
  ]
}